name: Continuous Deployment

on: push

jobs:
    prettier:
        name: Prettier
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: Install dependencies
              run: npm ci
            - name: Run prettier
              run: npm run check:prettier --workspaces --if-present

    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: Install dependencies
              run: npm ci
            - name: Build
              run: npm run build --workspaces --if-present

    staging-deploy:
        name: Staging Deploy
        needs:
            - prettier
            - build
        environment:
            name: staging
            url: https://staging.tankmon.h4ctar.com
        runs-on: ubuntu-latest
        env:
            DEPLOY_HOST: ${{ vars.DEPLOY_HOST }}
            JWKS_URL: ${{ vars.JWKS_URL }}
            ISSUER: ${{ vars.ISSUER }}
            SSH_USER: ${{ vars.SSH_USER }}
            VITE_AUTHORITY: ${{ vars.VITE_AUTHORITY }}
            VITE_CLIENT_ID: ${{ vars.VITE_CLIENT_ID }}
        steps:
            - uses: actions/checkout@v3
            - name: Install pm2
              run: npm install --global pm2@latest
            - name: Setup SSH
              env:
                  SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
                  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
              run: |
                  mkdir -m 700 -p ~/.ssh &&
                  echo "$SSH_PRIVATE_KEY" > ~/.ssh/github_rsa && chmod 600 ~/.ssh/github_rsa &&
                  echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts
            - name: Deploy to staging
              run: pm2 deploy staging

    end-2-end-test:
        name: End-to-End Test
        needs:
            - staging-deploy
        timeout-minutes: 60
        runs-on: ubuntu-latest
        permissions:
            checks: write
        env:
            TEST_BASEURL: https://staging.tankmon.h4ctar.com
            TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
            TEST_USERNAME: ${{ vars.TEST_USERNAME }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: Get installed Playwright version
              id: playwright-version
              run: echo "playwright_version=$(jq -r .packages.\"node_modules/@playwright/test\".version package-lock.json)" >> $GITHUB_OUTPUT
            - name: Cache Playwright binaries
              uses: actions/cache@v3
              id: playwright-cache
              with:
                  path: ~/.cache/ms-playwright
                  key: $RUNNER_OS-playwright-${{ steps.playwright-version.outputs.playwright_version }}
            - name: Install dependencies
              working-directory: test
              run: npm ci
            - name: Install Playwright browsers
              working-directory: test
              run: npm run install-browsers
              if: steps.playwright-cache.outputs.cache-hit != 'true'
            - name: Run Playwright tests
              working-directory: test
              run: npm run test
            - uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: playwright-report
                  path: test/playwright-report/
                  retention-days: 30

    prod-deploy:
        name: Production Deploy
        needs:
            - end-2-end-test
        environment:
            name: production
            url: https://tankmon.h4ctar.com
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        env:
            DEPLOY_HOST: ${{ vars.DEPLOY_HOST }}
            JWKS_URL: ${{ vars.JWKS_URL }}
            ISSUER: ${{ vars.ISSUER }}
            SSH_USER: ${{ vars.SSH_USER }}
            VITE_AUTHORITY: ${{ vars.VITE_AUTHORITY }}
            VITE_CLIENT_ID: ${{ vars.VITE_CLIENT_ID }}
        steps:
            - uses: actions/checkout@v3
            - name: Install pm2
              run: npm install --global pm2@latest
            - name: Setup SSH
              env:
                  SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
                  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
              run: |
                  mkdir -m 700 -p ~/.ssh &&
                  echo "$SSH_PRIVATE_KEY" > ~/.ssh/github_rsa && chmod 600 ~/.ssh/github_rsa &&
                  echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts
            - name: Deploy to production
              run: pm2 deploy production
