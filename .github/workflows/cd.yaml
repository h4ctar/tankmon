name: Continuous Deployment

on: push

jobs:
    prettier:
        name: Prettier
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: Install dependencies
              run: npm ci
            - name: Run prettier
              run: npm run check:prettier --workspaces --if-present

    # compile:
    #     runs-on: ubuntu-latest

    #     steps:
    #         - name: Checkout Repository
    #           uses: actions/checkout@v4

    #         - name: Compile Firmware
    #           id: compile
    #           uses: particle-iot/compile-action@v1
    #           with:
    #               particle-platform-name: electron
    #               sources-folder: firmware
    #               device-os-version: 2.0.1

    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: Install dependencies
              run: npm ci
            - name: Build
              run: npm run build --workspaces --if-present

    staging-deploy:
        name: Staging Deploy
        needs:
            - prettier
            - build
        environment:
            name: staging
            url: https://staging.tankmon.h4ctar.com
        runs-on: ubuntu-latest
        env:
            DEPLOY_HOST: ${{ vars.DEPLOY_HOST }}
            JWKS_URL: ${{ vars.JWKS_URL }}
            ISSUER: ${{ vars.ISSUER }}
            SSH_USER: ${{ vars.SSH_USER }}
            VITE_AUTHORITY: ${{ vars.VITE_AUTHORITY }}
            VITE_CLIENT_ID: ${{ vars.VITE_CLIENT_ID }}
        steps:
            - uses: actions/checkout@v3
            - name: Install pm2
              run: npm install --global pm2@latest
            - name: Setup SSH
              env:
                  SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
                  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
              run: |
                  mkdir -m 700 -p ~/.ssh &&
                  echo "$SSH_PRIVATE_KEY" > ~/.ssh/github_rsa && chmod 600 ~/.ssh/github_rsa &&
                  echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts
            - name: Deploy to staging
              run: pm2 deploy staging

    prod-deploy:
        name: Production Deploy
        needs:
            - staging-deploy
        environment:
            name: production
            url: https://tankmon.h4ctar.com
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        env:
            DEPLOY_HOST: ${{ vars.DEPLOY_HOST }}
            JWKS_URL: ${{ vars.JWKS_URL }}
            ISSUER: ${{ vars.ISSUER }}
            SSH_USER: ${{ vars.SSH_USER }}
            VITE_AUTHORITY: ${{ vars.VITE_AUTHORITY }}
            VITE_CLIENT_ID: ${{ vars.VITE_CLIENT_ID }}
        steps:
            - uses: actions/checkout@v3
            - name: Install pm2
              run: npm install --global pm2@latest
            - name: Setup SSH
              env:
                  SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
                  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
              run: |
                  mkdir -m 700 -p ~/.ssh &&
                  echo "$SSH_PRIVATE_KEY" > ~/.ssh/github_rsa && chmod 600 ~/.ssh/github_rsa &&
                  echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts
            - name: Deploy to production
              run: pm2 deploy production
